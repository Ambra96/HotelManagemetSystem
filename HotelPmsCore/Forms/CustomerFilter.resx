<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4gD37OUA+fDsBfnw7AD58Otf+fDs//nw6/368e7+8+je/+7i0//v49X/7+PV//Hl2P7k08L918Ov/9rH
        s1/Yw68A2MSvAt7MugAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjv
        6gD26uEA9+vkAPnw7AX58OwA+e/rX/nw7P/58Oz9+vHu/vjv6v/v5Nb/7+PV/+/j1f/v49X/7+PV//Hl
        2P7k08L92MOv/9nGsmDq1MAAlINvCGFSPQFSRC8AX1A7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD47+oA9ungAPbr4wD58OwF+fDsAPjv61/58O3/+vHt/fnw7P737ef/8eXZ/+/i1P/v49X/7+PV/+/j
        1f/v49X/7+PV//Hl2P7k08L918Ov/9rHs1/Yw68A2cSwBeDQvgDh0sAA2se0AAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+O/qAPbp4AD26uIA+fDtBfnx7QD47+pf+vHu//bs5f3x5tv+8eXZ/+/j1P/v49T/7+PV/+/j
        1f/v49X/7+PV/+/j1f/v49X/7+PV//Hl2P7k08L918Ov/9rHs1/Yw68A2cSwBeDQvgDh0sAA28i0AAAA
        AAAAAAAAAAAAAPjv6gD78vEA////APnx7QT68e4A+e/rX/rx7v/16+P97+LU/u7i1P/v49T/7+PV/+/j
        1f/v49X/7+PV/+/j1f/v49X/7+PV/+/j1f/v49X/7+PV//Hl2P7k08L918Ov/9rGs1/YxLAA2cWxBLSK
        bADUvqkA3Mm2AAAAAAAAAAAAAAAAAPju6AD68e4C+vLvAPnw7F/68e7/9Orh/e7i1P7v49X/7+PW/+/j
        1v/v49X/7+PV/+/j1f/v49X/7+PV/+/j1f/v49X/7+PV/+/j1f/v49X/7+LU//Dl1/7j08L92MSv/9rH
        s1/ZxbEA2cWxAtvJtgAAAAAAAAAAAAAAAAD47+kA+fDsA/rx7QD58OtZ+fDr//Ln3frt4dH57uLT++7i
        0/vu4tP77uLT++7i0/vu4tP77uLT++7i0/vu4tP77+PV++/j1fvv49X77+PV++/j1fvx5df78eXY+/Po
        2/ngz7362MOv/9vHtFnZxbEA2cWxA9zJtgAAAAAAAAAAAPjv6gD58O0C+/LwAPnw7MH37uj/9Onh/PXq
        4//16uL/9eri//Xq4v/16uL/9eri//Xq4v/16uL/9eri//Po3v/v49b/7+LU/+/j1P/v4tT/7+PV/+bX
        xv/hz77/4dC//9vItfzZxLD/2caywdfCrgDXwq0C28m1AAAAAAAAAAAA+vLuAP///wH//v8A/vb1RP/6
        +mH//f5c//z9Xf/8/V3//P1d//z9Xf/8/V3//P1d//z9Xf/8/V3//P1d//3+Xfjv5lz06dxc9OreXPXr
        31zy6Ntc2cWxXdXAq13Wwaxd2cSwXNrHs2HZxrJE2MSvANjDrwHbyLUAAAAAAAAAAADm18UAwqaLAcar
        kQDZxbBQ0bqicNC5oWnQuaFq0LmhatC5oWrQuaFq0LmhatC5oWrQuaFq0LmhatC5oWrQuaFq0rulatK8
        pmrSvKZq0rymatK8pmrWwaxq18KuatfCrWrWwaxp1sGscNnGslDWwawA1sCrAdzJtgAAAAAAAAAAAO/j
        1QDl1cUC59jIAOzf0b/n2cn/5tfG/ObXx//m18f/5tfH/+bXx//m18f/5tfH/+bXx//m18f/5tfH/+bX
        x//m18b/5tfG/+bXxv/m18b/5tfG/+bWxv/m1sb/5tbG/+bXx/zj0sH/2caywdnEsADcyLUC28m1AAAA
        AAAAAAAA7+PWAPHm2QLx5tgA8OTWrPHm2PHx5tjj8ebY5fHm2OXx5tjl8ebY5fHm2OXx5tjl8ebY5fHm
        2OXx5tjl8ebY5fHm2OXx5tjl8ebY5fHm2OXx5tjl8ebY5fHm2OXx5tjl8ufa4+vez/HaxrKu3Mi1AOHP
        vQLbyLUAAAAAAAAAAADv49UA6dvLAOrczQDt4dIO693OFOrczRLq3M0T6tzNE+rczRPq3M0T6tzNE+rc
        zRPq3M0T6tzNE+rczRPq3M0T6tzNE+rczRPq3M0T6tzNE+rczRPq3M0T6tzNE+rczRPs3tAS1b+qFNS+
        qQ69noMAyK2UANvItQAAAAAA/+i0L//pSl//6KQH/+hUK//oKBP/6BgT/+gQC//oEAn/6BQn/+gUK//o
        FC//6BQv/+gUL//oFC//yBQv/6gUL/9IFC/+kAwv/SAEL/pAAn/0gAEv6QAAl9IAAEvUAAAryAAAE5AA
        AAmQAAAJkAAACZAAAAmQAAAJkAAACZAAAAk=
</value>
  </data>
</root>